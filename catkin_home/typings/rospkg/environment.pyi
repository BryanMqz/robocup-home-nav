"""
This type stub file was generated by pyright.
"""

"""
Access information about ROS package system environment variables.
"""
ROS_ROOT = "ROS_ROOT"
ROS_PACKAGE_PATH = "ROS_PACKAGE_PATH"
ROS_HOME = "ROS_HOME"
ROS_ETC_DIR = "ROS_ETC_DIR"
ROS_LOG_DIR = "ROS_LOG_DIR"
ROS_TEST_RESULTS_DIR = "ROS_TEST_RESULTS_DIR"
def get_ros_paths(env=...):
    """
    Get an ordered list of ROS paths to search for ROS packages,
    stacks, and other resources.  This is generally computed from
    :envvar:`ROS_ROOT` and :envvar:`ROS_PACKAGE_PATH`.

    :param env: override environment dictionary
    """
    ...

def get_ros_root(env=...):
    """
    Get the current :envvar:`ROS_ROOT`.

    :param env: override environment dictionary, ``dict``
    """
    ...

def get_ros_package_path(env=...):
    """
    Get the current ROS_PACKAGE_PATH.
    :param env: (optional) environment override, ``dict``
    """
    ...

def get_ros_home(env=...):
    """
    Get directory location of '.ros' directory (aka ROS home).
    possible locations for this. The :envvar:`ROS_HOME` environment
    variable has priority. If :envvar:`ROS_HOME` is not set,
    ``$HOME/.ros`` is used.

    :param env: override ``os.environ`` dictionary, ``dict``
    :returns: path to use use for log file directory, ``str``
    """
    ...

def get_log_dir(env=...):
    """
    Get directory to use for writing log files. There are multiple
    possible locations for this. The ROS_LOG_DIR environment variable
    has priority. If that is not set, then ROS_HOME/log is used. If
    ROS_HOME is not set, $HOME/.ros/log is used.

    :param env: override os.environ dictionary, ``dict``
    :returns: path to use use for log file directory, ``str``
    """
    ...

def get_test_results_dir(env=...):
    """
    Get directory to use for writing test result files. There are
    multiple possible locations for this. The
    :envvar:`ROS_TEST_RESULTS_DIR` environment variable has
    priority. If that is set, :envvar:`ROS_TEST_RESULTS_DIR` is
    returned.  If :envvar:`ROS_TEST_RESULTS_DIR` is not set, then
    :envvar:`ROS_HOME`/test_results is used. If :envvar:`ROS_HOME` is
    not set, ``$HOME/.ros/test_results`` is used.

    :param env: environment dictionary (defaults to ``os.environ``), ``dict``
    :returns: path to use use for log file directory, ``str``
    """
    ...

def on_ros_path(p, env=...):
    """
    Check to see if filesystem path is on paths specified in ROS
    environment (:envvar:`ROS_ROOT`, :envvar:`ROS_PACKAGE_PATH`).

    :param p: path, ``str``
    :return: ``True`` if p is on the ROS path, ``bool``
    """
    ...

def get_etc_ros_dir(env=...):
    """
    Get directory location of ``/etc/ros`` directory.  The
    :envvar:`ROS_ETC_DIR` environment variable has priority. If
    :envvar:`ROS_ETC_DIR` is not set, ``/etc/ros`` is used.

    :param env: override environment dictionary
    :return: path to use use for log file directory
    """
    ...

