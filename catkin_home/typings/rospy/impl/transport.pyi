"""
This type stub file was generated by pyright.
"""

import threading

"""
Base classes for rospy transports

These are the base underlying transport implementations, i.e.
TCP/IP connections, etc...

For topic implementations, see L{topics}
"""
_transport_id = 0
_id_lock = threading.Lock()
INBOUND = 'i'
OUTBOUND = 'o'
BIDIRECTIONAL = 'b'
class Transport(object):
    transport_type = ...
    def __init__(self, direction, name=...) -> None:
        ...
    
    def fileno(self):
        """
        Get a file descriptor for select() if available
        """
        ...
    
    def set_cleanup_callback(self, cleanup_callback):
        ...
    
    def close(self):
        ...
    
    def write_data(self, data):
        ...
    
    def get_transport_info(self):
        ...
    


class DeadTransport(Transport):
    def __init__(self, transport) -> None:
        ...
    
    def get_transport_info(self):
        ...
    


class ProtocolHandler(object):
    def shutdown(self):
        ...
    
    def create_transport(self, topic, pub_uri, protocol_params):
        ...
    
    def supports(self, protocol):
        ...
    
    def get_supported(self):
        ...
    
    def init_publisher(self, topic, protocol):
        ...
    


