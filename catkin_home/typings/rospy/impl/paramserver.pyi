"""
This type stub file was generated by pyright.
"""

"""Parameter Server Cache"""
class ParamServerCache(object):
    """
    Cache of values on the parameter server. Implementation
    is just a thread-safe dictionary.
    """
    def __init__(self) -> None:
        ...
    
    def delete(self, key):
        ...
    
    def set_notifier(self, notifier):
        """
        Notifier implements any parameter subscription logic. The
        notifier should be a function that takes in a key and value
        that represents a parameter update. Notifier is called under
        lock and thus must not implement any lengthy computation.
        """
        ...
    
    def update(self, key, value):
        """
        Update the value of the parameter in the cache
        @param key: parameter key
        @type  key: str
        @param value: parameter value
        @type  value: str
        @raise: KeyError if key is not already in the cache.
        """
        ...
    
    def set(self, key, value):
        """
        Set the value of the parameter in the cache. This is a
        prerequisite of calling update().
        @param key: parameter key
        @type  key: str
        @param value: parameter value
        @type  value: str
        """
        ...
    
    def get(self, key):
        """
        @param key: parameter key
        @type  key: str
        @return: Current value for parameter
        @raise: KeyError
        """
        ...
    


_param_server_cache = None
def get_param_server_cache():
    """
    Get a handle on the client-wide parameter server cache
    """
    ...

