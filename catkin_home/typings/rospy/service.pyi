"""
This type stub file was generated by pyright.
"""

import logging
from rospy.core import *
from rospy.impl.transport import *

"""Base-classes and management of ROS services.
See L{rospy.tcpros_service} for actual implementation."""
logger = logging.getLogger('rospy.service')
class ServiceException(Exception):
    """Exception class for service-related errors"""
    ...


class _Service(object):
    """Internal-use superclass for storing service information"""
    def __init__(self, name, service_class) -> None:
        ...
    


class ServiceManager(object):
    """Keeps track of currently registered services in the ROS system"""
    def __init__(self, registration_listeners=...) -> None:
        """
        ctor
        @param registration_listeners: override default registration listener.
        @type  registration_listeners: RegistrationListeners
        """
        ...
    
    def get_services(self):
        """
        @return: List of (service_name, service_uri)  for all registered services.
        @rtype: [(str, str)]
        """
        ...
    
    def unregister_all(self):
        """
        Unregister all registered services
        """
        ...
    
    def register(self, resolved_service_name, service):
        """
        Register service with ServiceManager and ROS master
        @param resolved_service_name: name of service (resolved)
        @type  resolved_service_name: str
        @param service: Service to register
        @type  service: L{_Service}
        """
        ...
    
    def unregister(self, resolved_service_name, service):
        """
        Unregister service with L{ServiceManager} and ROS Master
        @param resolved_service_name: name of service
        @type  resolved_service_name: str
        @param service: service implementation
        @type  service: L{_Service}
        """
        ...
    
    def get_service(self, resolved_service_name):
        """
        @param resolved_service_name: name of service
        @type  resolved_service_name: str
        @return: service implementation
        @rtype: _Service
        """
        ...
    


